specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
- name: AccountRegistryDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{AccountRegistry}}"
    abi: AccountRegistry
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/account-registry.ts
    entities: [ ]
    abis:
    - name: AccountRegistry
      file: ./abis/AccountRegistry.json
    eventHandlers:
    - event: AccountCreated(indexed uint64,indexed address,string)
      handler: handleAccountCreated
    - event: AccountBroadcast(indexed uint64,string,string)
      handler: handleAccountBroadcast
    - event: AccountTransferred(indexed uint64,address)
      handler: handleAccountTransferred
    - event: AccountIssuerSet(indexed address,bool)
      handler: handleAccountIssuerSet
- name: NodeRegistryDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{NodeRegistry}}"
    abi: NodeRegistry
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/node-registry.ts
    entities: [ ]
    abis:
    - name: NodeRegistry
      file: ./abis/NodeRegistry.json
    eventHandlers:
    - event: NodeCreated(indexed uint64,indexed uint8,indexed uint64,uint64,uint64,string)
      handler: handleNodeCreated
    - event: NodeOwnerSet(indexed uint64,indexed uint64)
      handler: handleNodeOwnerSet
    - event: NodeParentSet(indexed uint64,indexed uint64)
      handler: handleNodeParentSet
    - event: NodeGroupNodeSet(indexed uint64,indexed uint64)
      handler: handleNodeGroupNodeSet
    - event: NodeBroadcast(indexed uint64,string,string)
      handler: handleNodeBroadcast
    - event: NodeControllerSet(indexed uint64,indexed address,bool)
      handler: handleControllerSet
- name: CollectionFactoryDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{CollectionFactory}}"
    abi: CollectionFactory
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/collection-factory.ts
    entities: [ ]
    abis:
    - name: CollectionFactory
      file: ./abis/CollectionFactory.json
    - name: Collection
      file: ./abis/Collection.json
    eventHandlers:
    - event: CollectionCreated(indexed address)
      handler: handleCollectionCreated
- name: MembershipsFactoryDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{MembershipsFactory}}"
    abi: MembershipsFactory
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/memberships-factory.ts
    entities: [ ]
    abis:
    - name: MembershipsFactory
      file: ./abis/MembershipsFactory.json
    - name: Memberships
      file: ./abis/Memberships.json
    eventHandlers:
    - event: MembershipsCreated(indexed address)
      handler: handleMembershipsCreated
- name: RevenueModuleFactoryDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{RevenueModuleFactory}}"
    abi: RevenueModuleFactory
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/revenue-module-factory.ts
    entities: [ ]
    abis:
    - name: RevenueModuleFactory
      file: ./abis/RevenueModuleFactory.json
    eventHandlers:
    - event: RevenueModuleDeployed(indexed address,indexed address,(address,address[],uint256[],address[],uint32[],uint32,uint64,string))
      handler: handleRevenueModuleDeployed
- name: ControllerV1DataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{ControllerV1}}"
    abi: ControllerV1
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/controller-v1.ts
    entities: [ ]
    abis:
    - name: ControllerV1
      file: ./abis/ControllerV1.json
    eventHandlers:
    - event: SubdomainReserved(indexed uint64,string)
      handler: handleSubdomainReserved
- name: DropEngineV2DataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    address: "{{DropEngineV2}}"
    abi: DropEngineV2
    startBlock: {{startBlock}}
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/drop-engine-v2.ts
    entities: [ ]
    abis:
    - name: DropEngineV2
      file: ./abis/DropEngineV2.json
    eventHandlers:
    - event: DropCreated(address,uint16,(uint96,uint16,bool,bool,uint8,address,uint16,uint96,uint64))
      handler: handleDropCreated
templates:
- name: CollectionDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    abi: Collection
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/collection.ts
    entities: [ ]
    abis:
    - name: Collection
      file: ./abis/Collection.json
    eventHandlers:
    - event: RecordCreated(indexed uint256,indexed uint16,uint80)
      handler: handleRecordCreated
    - event: SequenceConfigured(indexed uint16,(uint64,uint64,uint64,uint64,address,uint64),bytes)
      handler: handleSequenceConfigured
    - event: Transfer(indexed address,indexed address,indexed uint256)
      handler: handleTransfer
    - event: OwnershipTransferred(indexed address,indexed address)
      handler: handleOwnershipTransferred
- name: MembershipsDataSource
  kind: ethereum/contract
  network: {{network}}
  source:
    abi: Memberships
  mapping:
    kind: ethereum/events
    apiVersion: 0.0.5
    language: wasm/assemblyscript
    file: ./src/memberships.ts
    entities: [ ]
    abis:
    - name: Memberships
      file: ./abis/Memberships.json
    eventHandlers:
    - event: Transfer(indexed address,indexed address,indexed uint256)
      handler: handleTransfer
    - event: OwnershipTransferred(indexed address,indexed address)
      handler: handleOwnershipTransferred
